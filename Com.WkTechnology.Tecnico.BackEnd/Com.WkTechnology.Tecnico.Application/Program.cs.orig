using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using System.IO;
using System.Net;

namespace Com.AC.Core.Api
{
    public class Program
    {
        public class Program
        {
<<<<<<< HEAD
            private static IConfiguration configuration;

            public static void Main(string[] args)
            {
                var builder = new ConfigurationBuilder()
                 .SetBasePath(Directory.GetCurrentDirectory());


                if (File.Exists("appsettings.prod.json"))
                    builder.AddJsonFile("appsettings.prod.json");
                else
                    builder.AddJsonFile("appsettings.json");

                configuration = builder.Build();
=======
            var builder = new ConfigurationBuilder()
             .SetBasePath(Directory.GetCurrentDirectory())
             .AddJsonFile("appsettings.json");

            configuration = builder.Build();

            var host = new WebHostBuilder()
                .UseConfiguration(configuration)
                .UseWebRoot(Path.Combine(Directory.GetCurrentDirectory(), "wwwroot"))
                .UseUrls(new string[] { "http://*:5000" })
                .ConfigureLogging(b =>
                {
                    b.SetMinimumLevel(LogLevel.Error);
                    b.AddConfiguration(configuration);
                    b.AddConsole();
                })
                .UseKestrel()
                //                //#if !DEBUG
                //                .UseKestrel(
                //                    op =>
                //                    {
                //                        op.Listen(IPAddress.Parse("192.168.100.140"), 5000, opt =>
                //                    {
                //                        opt.UseHttps("personay_com_lcrengenharia_com_br_d62e9_d73a1_1611014399_225584c7e1bf88c195f6523b7a2f1a8a.crt", "");
                //                    });
                //                    }


                //                )
                ////#endif
                .UseStartup<Startup>()
                .Build();

            host.Run();
        }
>>>>>>> 26f3d23486e5087736bc148f1f4894af1fbe7b3a

                var host = new WebHostBuilder()
                    .UseConfiguration(configuration)
                    .UseWebRoot(Path.Combine(Directory.GetCurrentDirectory(), "wwwroot"))

                    .ConfigureLogging(b =>
                    {
                        b.SetMinimumLevel(LogLevel.Error);
                        b.AddConfiguration(configuration);
                        b.AddConsole();
                    })
                    .UseKestrel();

                if (File.Exists("appsettings.prod.json"))
                    host.UseKestrel(
                        op =>
                        {
                            op.Listen(IPAddress.Parse("10.0.0.4"), 5000, opt =>
                            {
                                opt.UseHttps("personay-personay2f75fd2f-fa84-422b-abbe-f5a15ad8c8bf-20210208.pfx", "");
                            });
                        });
                else
                    host.UseUrls(new string[] { "http://*:5000" });


                host.UseStartup<Startup>()
                .Build()
                .Run();
            }

            /*public static IHostBuilder CreateHostBuilder(string[] args) =>
                Host.CreateDefaultBuilder(args)
                    .ConfigureWebHostDefaults(webBuilder =>
                    {
                        webBuilder.UseStartup<Startup>();
                    });*/
        }
    }
